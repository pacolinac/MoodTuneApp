{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick Mraz\\\\Desktop\\\\Mood_tune\\\\MoodTuneApp\\\\IzvorniKod\\\\frontend_\\\\src\\\\components\\\\Music.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { useCallback, useEffect } from 'react';\nimport \"./music.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Music({\n  formData,\n  setFormData,\n  odazivPostListening,\n  setOdazivPost\n}) {\n  _s();\n  var _musicData;\n  const currentAudio = useRef();\n  const musicData = null;\n  const [isAudioPlaying, setIsAudioPlaying] = useState(0);\n  const [audioProgress, setAudioProgress] = useState(0);\n  const setOdaziv = useCallback(data => {\n    setOdazivPost(prevOdaziv => ({\n      ...prevOdaziv,\n      pjesmaId: data.pjesmaId\n    }));\n  }, [setOdazivPost]);\n  useEffect(() => {\n    const fetchSong = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/songs?mood=${formData.stanjeZeljeno}`);\n        musicData = await response.json();\n        console.log(musicData);\n        setOdaziv(musicData);\n      } catch (error) {\n        console.error('Ne mogu dohvatiti podatke o pjesmi:', error);\n      }\n    };\n    fetchSong();\n  }, [formData.wannafeel, setOdaziv]);\n  const handleAudioPlay = () => {\n    if (currentAudio.current.paused) {\n      currentAudio.current.play();\n      setIsAudioPlaying(true);\n    } else {\n      currentAudio.current.pause();\n      setIsAudioPlaying(false);\n    }\n  };\n  const handleAudioUpdate = () => {\n    const progress = parseInt(currentAudio.current.currentTime / currentAudio.current.duration * 100);\n    setAudioProgress(isNaN(progress) ? 0 : progress);\n  };\n  const handleMusicProgressBar = e => {\n    setAudioProgress(e.target.value);\n    currentAudio.current.currentTime = e.target.value * currentAudio.current.duration / 100;\n  };\n  const style = {\n    backgroundColor: formData.stanjeZeljeno === \"tuzan\" ? \"rgba(47, 92, 149, 0.8)\" :\n    // Blue with 50% opacity\n    formData.stanjeZeljeno === \"sretan\" ? \"rgba(216, 198, 82, 0.8)\" :\n    // Yellow with 50% opacity\n    formData.stanjeZeljeno === \"motiviran\" ? \"rgba(95, 76, 141, 0.8)\" :\n    // Purple with 50% opacity\n    formData.stanjeZeljeno === \"smiren\" ? \"rgba(93, 129, 76, 0.8)\" :\n    // Green with 50% opacity\n    \"rgba(255, 255, 255, 1)\"\n  };\n\n  //prepravi ako treba {musicData.naziv} i {musicData.izvodac} na tocna imena varijabli umjesno naziv i izvodac\n  //i stavi {musicData.url} pod src u audio\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerM\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stisnite Play i poslu\\u0161ajte va\\u0161u pjesmu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: \"${musicData.url}\",\n      ref: currentAudio,\n      onTimeUpdate: handleAudioUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"$\", (_musicData = musicData) === null || _musicData === void 0 ? void 0 : _musicData.naslov, \"- $\", musicData.autor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-container\",\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"musicControlers\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          onCli: true,\n          className: \"play\",\n          onClick: handleAudioPlay,\n          children: isAudioPlaying ? \"||\" : \"►\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"musicProgressBar\",\n        className: \"musicProgressBar\",\n        value: audioProgress,\n        onChange: handleMusicProgressBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Music, \"j/CYrsqHbHI26zB39H6rZUmT+4s=\");\n_c = Music;\nexport default Music;\nvar _c;\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","Music","formData","setFormData","odazivPostListening","setOdazivPost","_s","_musicData","currentAudio","musicData","isAudioPlaying","setIsAudioPlaying","audioProgress","setAudioProgress","setOdaziv","data","prevOdaziv","pjesmaId","fetchSong","response","fetch","stanjeZeljeno","json","console","log","error","wannafeel","handleAudioPlay","current","paused","play","pause","handleAudioUpdate","progress","parseInt","currentTime","duration","isNaN","handleMusicProgressBar","e","target","value","style","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","ref","onTimeUpdate","naslov","autor","onCli","onClick","type","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Patrick Mraz/Desktop/Mood_tune/MoodTuneApp/IzvorniKod/frontend_/src/components/Music.js"],"sourcesContent":["import {useState} from 'react'\r\nimport {useRef} from 'react'\r\nimport { useCallback, useEffect } from 'react';\r\nimport \"./music.css\"\r\n\r\nfunction Music({formData, setFormData, odazivPostListening, setOdazivPost}) {\r\n\r\n  const currentAudio = useRef()\r\n  const musicData = null\r\n\r\n  const [isAudioPlaying, setIsAudioPlaying] = useState(0)\r\n  const [audioProgress, setAudioProgress] = useState(0)\r\n\r\n  const setOdaziv = useCallback((data) => {\r\n    setOdazivPost((prevOdaziv) => ({\r\n      ...prevOdaziv,\r\n      pjesmaId: data.pjesmaId, \r\n    }));\r\n  }, [setOdazivPost]);\r\n\r\n useEffect(() => {\r\n\r\n  const fetchSong = async () => {\r\n\r\n      try {\r\n          const response = await fetch(`http://localhost:8080/api/songs?mood=${formData.stanjeZeljeno}`);\r\n        musicData = await response.json();\r\n        console.log(musicData);\r\n        setOdaziv(musicData); \r\n\r\n    } catch (error) {\r\n        console.error('Ne mogu dohvatiti podatke o pjesmi:', error);\r\n    }\r\n  };\r\n\r\n  fetchSong();\r\n}, [formData.wannafeel, setOdaziv]);\r\n\r\n\r\n  const handleAudioPlay = () => {\r\n    if(currentAudio.current.paused) {\r\n        currentAudio.current.play();\r\n        setIsAudioPlaying(true)\r\n      }\r\n    else {\r\n      currentAudio.current.pause();\r\n      setIsAudioPlaying(false)\r\n      }\r\n    }\r\n\r\n\r\n    const handleAudioUpdate = ()=>{\r\n    \r\n      const progress = parseInt((currentAudio.current.currentTime / currentAudio.current.duration) * 100);\r\n      setAudioProgress(isNaN(progress)? 0 : progress)\r\n    }\r\n\r\n    const handleMusicProgressBar = (e)=>{\r\n      setAudioProgress(e.target.value);\r\n      currentAudio.current.currentTime = e.target.value * currentAudio.current.duration / 100;\r\n    }\r\n\r\n\r\n    const style = {\r\n        backgroundColor:\r\n            formData.stanjeZeljeno === \"tuzan\" ? \"rgba(47, 92, 149, 0.8)\" : // Blue with 50% opacity\r\n                formData.stanjeZeljeno === \"sretan\" ? \"rgba(216, 198, 82, 0.8)\" : // Yellow with 50% opacity\r\n                    formData.stanjeZeljeno === \"motiviran\" ? \"rgba(95, 76, 141, 0.8)\" : // Purple with 50% opacity\r\n                        formData.stanjeZeljeno === \"smiren\" ? \"rgba(93, 129, 76, 0.8)\" : // Green with 50% opacity\r\n        \"rgba(255, 255, 255, 1)\", \r\n    };\r\n\r\n    //prepravi ako treba {musicData.naziv} i {musicData.izvodac} na tocna imena varijabli umjesno naziv i izvodac\r\n    //i stavi {musicData.url} pod src u audio\r\n\r\n    return(\r\n        <div className='containerM'>\r\n            <h2>Stisnite Play i poslušajte vašu pjesmu</h2>\r\n            <audio src='${musicData.url}' ref={currentAudio}  onTimeUpdate={handleAudioUpdate}></audio>\r\n\r\n            <p>${musicData?.naslov}- ${musicData.autor}</p>\r\n\r\n            <div className=\"music-container\" style={style}>\r\n\r\n              <div className='musicControlers'>\r\n                <i onCli className=\"play\" onClick={handleAudioPlay}>{isAudioPlaying ? \"||\" : \"►\"}</i>\r\n              </div>\r\n\r\n              <input type=\"range\" name=\"musicProgressBar\" className=\"musicProgressBar\" value={audioProgress} onChange={handleMusicProgressBar} />\r\n              \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}