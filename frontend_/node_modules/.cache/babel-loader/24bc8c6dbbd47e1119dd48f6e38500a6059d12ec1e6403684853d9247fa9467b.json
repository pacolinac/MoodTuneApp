{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick Mraz\\\\Desktop\\\\Mood_tune\\\\MoodTuneApp\\\\IzvorniKod\\\\frontend_\\\\src\\\\components\\\\Odazivi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport pozadina from \"../assets/pozadina.png\";\nimport \"./Odazivi.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Odazivi() {\n  _s();\n  const [odazivi, setOdazivi] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchOdazive() {\n      try {\n        const response = await axios.get(\"/api/admin/responses\");\n        setOdazivi(response.data);\n      } catch (error) {\n        setError(\"Greška pri dohvaćanju podataka!\");\n      }\n    }\n    fetchOdazive();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"backgroundimg\",\n      src: pozadina,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkheader\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin\",\n        className: \"logic\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"MoodTune\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"responselist\",\n      children: [odazivi.map((response, index) => {\n        var _response$pjesma;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"responsecard\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Odaziv ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), \" \", response.odazivId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Korisnik ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), \" \", response.korisnik.korisnikId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Odgovor ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), \" \", response.odgovor.odgovorId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pitanje ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), \" \", response.pitanje.pitanjeId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pjesma ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), \" \", ((_response$pjesma = response.pjesma) === null || _response$pjesma === void 0 ? void 0 : _response$pjesma.pjesmaId) || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Boja:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), \" \", response.boja || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this);\n      }), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Odazivi, \"w2866BN+nxgrCz0Duh+N8kPP0+I=\");\n_c = Odazivi;\nexport default Odazivi;\nvar _c;\n$RefreshReg$(_c, \"Odazivi\");","map":{"version":3,"names":["React","useEffect","useState","pozadina","Link","axios","jsxDEV","_jsxDEV","Odazivi","_s","odazivi","setOdazivi","error","setError","fetchOdazive","response","get","data","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","map","index","_response$pjesma","odazivId","korisnik","korisnikId","odgovor","odgovorId","pitanje","pitanjeId","pjesma","pjesmaId","boja","_c","$RefreshReg$"],"sources":["C:/Users/Patrick Mraz/Desktop/Mood_tune/MoodTuneApp/IzvorniKod/frontend_/src/components/Odazivi.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport pozadina from \"../assets/pozadina.png\";\r\nimport \"./Odazivi.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Odazivi() {\r\n  const [odazivi, setOdazivi] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchOdazive() {\r\n      try {\r\n        const response = await axios.get(\"/api/admin/responses\");\r\n        setOdazivi(response.data);\r\n      } catch (error) {\r\n        setError(\"Greška pri dohvaćanju podataka!\");\r\n      }\r\n    }\r\n    fetchOdazive();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <img className=\"backgroundimg\" src={pozadina} alt=\"\"></img>\r\n      <div className=\"linkheader\">\r\n        <Link to={\"/admin\"} className=\"logic\">\r\n          <header>MoodTune</header>\r\n        </Link>\r\n      </div>\r\n      <div className=\"responselist\">\r\n        {odazivi.map((response, index) => (\r\n          <div className=\"responsecard\" key={index}>\r\n            <p>\r\n              <span>Odaziv ID:</span> {response.odazivId}\r\n            </p>\r\n            <p>\r\n              <span>Korisnik ID:</span> {response.korisnik.korisnikId}\r\n            </p>\r\n            <p>\r\n              <span>Odgovor ID:</span> {response.odgovor.odgovorId}\r\n            </p>\r\n            <p>\r\n              <span>Pitanje ID:</span> {response.pitanje.pitanjeId}\r\n            </p>\r\n            <p>\r\n              <span>Pjesma ID:</span> {response.pjesma?.pjesmaId || \"N/A\"}\r\n            </p>\r\n            <p>\r\n              <span>Boja:</span> {response.boja || \"N/A\"}\r\n            </p>\r\n          </div>\r\n        ))}\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Odazivi;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,eAAe;AACtB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,eAAea,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sBAAsB,CAAC;QACxDL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,QAAQ,CAAC,iCAAiC,CAAC;MAC7C;IACF;IACAC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAKY,SAAS,EAAC,eAAe;MAACC,GAAG,EAAEjB,QAAS;MAACkB,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DlB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAD,QAAA,eACzBX,OAAA,CAACH,IAAI;QAACsB,EAAE,EAAE,QAAS;QAACP,SAAS,EAAC,OAAO;QAAAD,QAAA,eACnCX,OAAA;UAAAW,QAAA,EAAQ;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNlB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAD,QAAA,GAC1BR,OAAO,CAACiB,GAAG,CAAC,CAACZ,QAAQ,EAAEa,KAAK;QAAA,IAAAC,gBAAA;QAAA,oBAC3BtB,OAAA;UAAKY,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC3BX,OAAA;YAAAW,QAAA,gBACEX,OAAA;cAAAW,QAAA,EAAM;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACV,QAAQ,CAACe,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACJlB,OAAA;YAAAW,QAAA,gBACEX,OAAA;cAAAW,QAAA,EAAM;YAAY;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACV,QAAQ,CAACgB,QAAQ,CAACC,UAAU;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACJlB,OAAA;YAAAW,QAAA,gBACEX,OAAA;cAAAW,QAAA,EAAM;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACV,QAAQ,CAACkB,OAAO,CAACC,SAAS;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACJlB,OAAA;YAAAW,QAAA,gBACEX,OAAA;cAAAW,QAAA,EAAM;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACV,QAAQ,CAACoB,OAAO,CAACC,SAAS;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACJlB,OAAA;YAAAW,QAAA,gBACEX,OAAA;cAAAW,QAAA,EAAM;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAAC,EAAAI,gBAAA,GAAAd,QAAQ,CAACsB,MAAM,cAAAR,gBAAA,uBAAfA,gBAAA,CAAiBS,QAAQ,KAAI,KAAK;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACJlB,OAAA;YAAAW,QAAA,gBACEX,OAAA;cAAAW,QAAA,EAAM;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACV,QAAQ,CAACwB,IAAI,IAAI,KAAK;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA,GAlB6BG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBnC,CAAC;MAAA,CACP,CAAC,EACDb,KAAK,iBAAIL,OAAA;QAAGY,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAEN;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAnDQD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAqDhB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}